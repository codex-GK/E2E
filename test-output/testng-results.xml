<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-12T17:51:04 GMT-05:00" name="Suite" finished-at="2022-01-12T17:51:54 GMT-05:00" duration-ms="50304">
    <groups>
    </groups>
    <test started-at="2022-01-12T17:51:04 GMT-05:00" name="Title validation" finished-at="2022-01-12T17:51:21 GMT-05:00" duration-ms="16879">
      <class name="Academy.Validatetitle">
        <test-method is-config="true" signature="firstexecution()[pri:0, instance:Academy.Validatetitle@172b013]" started-at="2022-01-12T17:51:04 GMT-05:00" name="firstexecution" finished-at="2022-01-12T17:51:20 GMT-05:00" duration-ms="15804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstexecution -->
        <test-method signature="pageTitleValidation()[pri:0, instance:Academy.Validatetitle@172b013]" started-at="2022-01-12T17:51:20 GMT-05:00" name="pageTitleValidation" finished-at="2022-01-12T17:51:20 GMT-05:00" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageTitleValidation -->
        <test-method signature="titlevalidation()[pri:0, instance:Academy.Validatetitle@172b013]" started-at="2022-01-12T17:51:20 GMT-05:00" name="titlevalidation" finished-at="2022-01-12T17:51:20 GMT-05:00" duration-ms="46" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [FEATUREDCOURSES] but found [FEATURED COURSES]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [FEATUREDCOURSES] but found [FEATURED COURSES]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Academy.Validatetitle.titlevalidation(Validatetitle.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titlevalidation -->
        <test-method is-config="true" signature="closewindow()[pri:0, instance:Academy.Validatetitle@172b013]" started-at="2022-01-12T17:51:21 GMT-05:00" name="closewindow" finished-at="2022-01-12T17:51:21 GMT-05:00" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closewindow -->
      </class> <!-- Academy.Validatetitle -->
    </test> <!-- Title validation -->
    <test started-at="2022-01-12T17:51:22 GMT-05:00" name="USer Logins" finished-at="2022-01-12T17:51:36 GMT-05:00" duration-ms="13812">
      <class name="Academy.Homepage">
        <test-method is-config="true" signature="firstexecution()[pri:0, instance:Academy.Homepage@13ad5cd3]" started-at="2022-01-12T17:51:22 GMT-05:00" name="firstexecution" finished-at="2022-01-12T17:51:25 GMT-05:00" duration-ms="2357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstexecution -->
        <test-method signature="basePageNavigation(java.lang.String,java.lang.String)[pri:0, instance:Academy.Homepage@13ad5cd3]" started-at="2022-01-12T17:51:25 GMT-05:00" name="basePageNavigation" data-provider="getdata" finished-at="2022-01-12T17:51:32 GMT-05:00" duration-ms="7812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ram@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ram1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="basePageNavigation(java.lang.String,java.lang.String)[pri:0, instance:Academy.Homepage@13ad5cd3]" started-at="2022-01-12T17:51:32 GMT-05:00" name="basePageNavigation" data-provider="getdata" finished-at="2022-01-12T17:51:36 GMT-05:00" duration-ms="3419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[arjun@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[arjun1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method is-config="true" signature="closewindow()[pri:0, instance:Academy.Homepage@13ad5cd3]" started-at="2022-01-12T17:51:36 GMT-05:00" name="closewindow" finished-at="2022-01-12T17:51:36 GMT-05:00" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closewindow -->
      </class> <!-- Academy.Homepage -->
    </test> <!-- USer Logins -->
    <test started-at="2022-01-12T17:51:36 GMT-05:00" name="Travel booking" finished-at="2022-01-12T17:51:54 GMT-05:00" duration-ms="18348">
      <class name="Academy.Ticketbooking">
        <test-method is-config="true" signature="initialtest()[pri:0, instance:Academy.Ticketbooking@3fed2870]" started-at="2022-01-12T17:51:36 GMT-05:00" name="initialtest" finished-at="2022-01-12T17:51:45 GMT-05:00" duration-ms="9315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialtest -->
        <test-method signature="onewaytrip()[pri:0, instance:Academy.Ticketbooking@3fed2870]" started-at="2022-01-12T17:51:45 GMT-05:00" name="onewaytrip" finished-at="2022-01-12T17:51:53 GMT-05:00" duration-ms="7183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onewaytrip -->
        <test-method signature="twowayTrip()[pri:0, instance:Academy.Ticketbooking@3fed2870]" started-at="2022-01-12T17:51:53 GMT-05:00" name="twowayTrip" finished-at="2022-01-12T17:51:54 GMT-05:00" duration-ms="1843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twowayTrip -->
      </class> <!-- Academy.Ticketbooking -->
    </test> <!-- Travel booking -->
  </suite> <!-- Suite -->
</testng-results>
